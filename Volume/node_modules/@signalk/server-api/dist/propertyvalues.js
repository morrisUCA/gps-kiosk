"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyValues = void 0;
const baconjs_1 = __importDefault(require("baconjs"));
class PropertyValues {
    streams = {};
    count = 0;
    static MAX_VALUES_COUNT = 1000;
    onPropertyValues(propName, cb) {
        return this.getStreamTuple(propName).stream.onValue(cb);
    }
    emitPropertyValue(pv) {
        if (this.count >= PropertyValues.MAX_VALUES_COUNT) {
            throw new Error(`Max PropertyValues count ${PropertyValues.MAX_VALUES_COUNT} exceeded trying to emit ${JSON.stringify(pv)}`);
        }
        this.getStreamTuple(pv.name).bus.push(pv);
    }
    getStreamTuple(propName) {
        let streamTuple = this.streams[propName];
        if (!streamTuple) {
            const bus = new baconjs_1.default.Bus();
            const stream = bus.scan([], (acc, v) => {
                acc.push(v);
                this.count++;
                return acc;
            });
            streamTuple = {
                bus,
                stream
            };
            streamTuple.stream.subscribe(() => ({})); // start the stream eagerly
            streamTuple.bus.push(undefined);
            this.streams[propName] = streamTuple;
        }
        return streamTuple;
    }
}
exports.PropertyValues = PropertyValues;
//# sourceMappingURL=propertyvalues.js.map